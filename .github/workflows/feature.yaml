name: feature CI
on: 
  push: 
    branches: 
      - "feature/**"
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  REPO_NAME: ${{ secrets.REPO_NAME }}
jobs:
  Clone-down:
    runs-on: ubuntu-latest
    container: golang:latest
    steps:
      - name: Clone down
        uses: actions/checkout@v2
      - name: Clone down
        uses: actions/upload-artifact@v2
        with:
          name: code
          path: .
  Build:
    runs-on: ubuntu-latest
    needs: [Clone-down]
    container: golang:latest
    steps:
      - name: Download repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: build backend
        run: cd backend && go build && cd ..
      - name: build frontend
        run: cd frontend && go build
      - name: Upload Repo
        uses: actions/upload-artifact@v2
        with: 
          name: code
          path: .
  Docker-image:
    runs-on: ubuntu-latest
    needs: [Build]
    steps: 
      - name: Download repo
        uses: actions/download-artifact@v2
        with:
          name: code
          path: .
      - name: docker login
        run: | # log into docker hub account
          docker login -u ${{env.docker_username}} -p ${{env.docker_password}} 
      - name: docker build frontend # get the date of the build
        run: cd frontend && docker build . --file Dockerfile --tag fortune_cookie && cd ..
      - name: Docker Push
        run: docker push ${{env.docker_username}}/$REPO_NAME:fortune_cookie
      - name: docker build backend # get the date of the build
        run: cd backend && docker build . --file Dockerfile --tag fortune_cookie 
      - name: Docker Push
        run: docker push ${{env.docker_username}}/$REPO_NAME:fortune_cookie
  Frontend-test:
    runs-on: ubuntu-latest
    needs: [Clone-down]
    container: golang:latest
    steps:
      - name: Download code
        uses: actions/download-artifact@v1
        with:
          name: code
          path: .
      - name: Execute frontend test
        run: cd frontend && go test